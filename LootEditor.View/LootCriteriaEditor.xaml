<UserControl x:Class="LootEditor.View.LootCriteriaEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LootEditor.View"
             xmlns:cvt="clr-namespace:LootEditor.View.Converters"
             xmlns:model="clr-namespace:LootEditor.Model;assembly=LootEditor.Model"
             xmlns:modelEnums="clr-namespace:LootEditor.Model.Enums;assembly=LootEditor.Model"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:vr="clr-namespace:LootEditor.View.ValidationRules"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <DataTemplate x:Key="ColorLootCriteriaTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Text="Color:" />
                <xctk:ColorPicker Grid.Row="0" Grid.Column="1" SelectedColor="{Binding Color}" DisplayColorAndName="True" />

                <TextBlock Grid.Row="1" Grid.Column="0" Text="Maximum Hue Diff:" />
                <xctk:DoubleUpDown Grid.Row="1" Grid.Column="1" Value="{Binding HDiff}" Minimum="0" Maximum="255" Increment="1" />

                <TextBlock Grid.Row="2" Grid.Column="0" Text="Maximum S/V Diff:" />
                <xctk:DecimalUpDown Grid.Row="2" Grid.Column="1" Value="{Binding SVDiff}" Minimum="0" Maximum="1" Increment="0.01" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="DisabledRuleTemplate">
            <CheckBox IsChecked="{Binding Value}">Disabled</CheckBox>
        </DataTemplate>
        <DataTemplate x:Key="LongValueKeyTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Text="Key:" />
                <ComboBox Grid.Row="0" Grid.Column="1" ItemsSource="{local:EnumBindingSource EnumType={x:Type modelEnums:LongValueKey}}" SelectedItem="{Binding Key, UpdateSourceTrigger=PropertyChanged}" />

                <TextBlock Grid.Row="1" Grid.Column="0" Text="Value:" />
                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}"
                         Visibility="{Binding Key, Converter={StaticResource LongValueKeyToVisibilityConverter}}" />
                <ComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{local:EnumBindingSource EnumType={x:Type modelEnums:Material}}"
                          SelectedItem="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource EnumToIntConverter}}"
                          Visibility="{Binding Key, Converter={StaticResource EqualityConverter}, ConverterParameter={x:Static modelEnums:LongValueKey.Material}}"/>
                <ComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{local:EnumBindingSource EnumType={x:Type modelEnums:WeaponMasteryCategory}}"
                          SelectedItem="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource EnumToIntConverter}}"
                          Visibility="{Binding Key, Converter={StaticResource EqualityConverter}, ConverterParameter={x:Static modelEnums:LongValueKey.WeaponMasteryCategory}}" />
                <ComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{local:EnumBindingSource EnumType={x:Type modelEnums:SkillType}}"
                          SelectedItem="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource EnumToIntConverter}}"
                          Visibility="{Binding Key, Converter={StaticResource EqualityConverter}, ConverterParameter={x:Static modelEnums:LongValueKey.EquipSkill}}" />
                <ComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{local:EnumBindingSource EnumType={x:Type modelEnums:SkillType}}"
                          SelectedItem="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource EnumToIntConverter}}"
                          Visibility="{Binding Key, Converter={StaticResource EqualityConverter}, ConverterParameter={x:Static modelEnums:LongValueKey.WieldReqAttribute}}" />
                <ListBox Grid.Row="1" Grid.Column="1" ItemsSource="{local:EnumBindingSource EnumType={x:Type modelEnums:ArmorSlot}}"
                         Visibility="{Binding Key, Converter={StaticResource EqualityConverter}, ConverterParameter={x:Static modelEnums:LongValueKey.Slot}}"
                         ScrollViewer.VerticalScrollBarVisibility="Auto" Height="100">
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type modelEnums:ArmorSlot}">
                            <local:CheckBoxForEnumWithFlagAttribute Content="{Binding}" EnumFlag="{Binding}"
                                    EnumValue="{Binding Path=DataContext.Value, RelativeSource={RelativeSource AncestorType=ListBox}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource EnumToIntConverter}, ConverterParameter={x:Type modelEnums:ArmorSlot}}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="DoubleValueKeyTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Text="Key:" />
                <ComboBox Grid.Row="0" Grid.Column="1" ItemsSource="{local:EnumBindingSource EnumType={x:Type modelEnums:DoubleValueKey}}" SelectedItem="{Binding Key}" />

                <TextBlock Grid.Row="1" Grid.Column="0" Text="Value:" />
                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="StringValueKeyTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Text="Key:" />
                <ComboBox Grid.Row="0" Grid.Column="1" ItemsSource="{local:EnumBindingSource EnumType={x:Type modelEnums:StringValueKey}}" SelectedItem="{Binding Key}" />

                <TextBlock Grid.Row="1" Grid.Column="0" Text="Value:" />
                <TextBox Grid.Row="1" Grid.Column="1">
                    <TextBox.Text>
                        <Binding Path="Value"
                                 Mode="TwoWay"
                                 UpdateSourceTrigger="PropertyChanged"
                                 NotifyOnValidationError="True">
                            <Binding.ValidationRules>
                                <vr:RegexValidationRule ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}" />
                                    <Setter Property="Background" Value="Salmon" />
                                    <Setter Property="BorderThickness" Value="2" />
                                    <Setter Property="BorderBrush" Value="Red" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ObjectClassTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Text="Object Class:" />
                <ComboBox Grid.Row="0" Grid.Column="1" ItemsSource="{local:EnumBindingSource EnumType={x:Type modelEnums:ObjectClass}}" SelectedItem="{Binding Value, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ValueTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Text="Value:" />
                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="SpellMatchTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Text="Matches:" />
                <TextBox Grid.Row="0" Grid.Column="1">
                    <TextBox.Text>
                        <Binding Path="Match"
                                 Mode="TwoWay"
                                 UpdateSourceTrigger="PropertyChanged"
                                 NotifyOnValidationError="True">
                            <Binding.ValidationRules>
                                <vr:RegexValidationRule ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}" />
                                    <Setter Property="Background" Value="Salmon" />
                                    <Setter Property="BorderThickness" Value="2" />
                                    <Setter Property="BorderBrush" Value="Red" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <TextBlock Grid.Row="1" Grid.Column="0" Text="Does NOT Match:" />
                <TextBox Grid.Row="1" Grid.Column="1">
                    <TextBox.Text>
                        <Binding Path="NoMatch"
                                 Mode="TwoWay"
                                 UpdateSourceTrigger="PropertyChanged"
                                 NotifyOnValidationError="True">
                            <Binding.ValidationRules>
                                <vr:RegexValidationRule ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}" />
                                    <Setter Property="Background" Value="Salmon" />
                                    <Setter Property="BorderThickness" Value="2" />
                                    <Setter Property="BorderBrush" Value="Red" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <TextBlock Grid.Row="2" Grid.Column="0" Text="Matching Spell Count:" />
                <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding SpellCount}" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="CharacterBaseSkillTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Text="Skill:" />
                <ComboBox Grid.Row="0" Grid.Column="1" ItemsSource="{local:EnumBindingSource EnumType={x:Type modelEnums:SkillType}}" SelectedItem="{Binding SkillType}" />

                <TextBlock Grid.Row="1" Grid.Column="0" Text="Minimum Base Skill Level:" />
                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding MinSkillValue}" />

                <TextBlock Grid.Row="2" Grid.Column="0" Text="Maximum Base Skill Level:" />
                <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding MaxSkillValue}" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="CalcedBuffedTinkedTargetMeleeGETemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Text="Calc'd Buffed/Tinked Damage over Time:" />
                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding CalculatedBuffedTinkedDamageOverTime}" />

                <TextBlock Grid.Row="1" Grid.Column="0" Text="Buffed Melee D Bonus:" />
                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding BuffedMeleeDefenseBonus}" />

                <TextBlock Grid.Row="2" Grid.Column="0" Text="Buffed Attack Bonus:" />
                <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding BuffedAttackBonus}" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="SlotExactPaletteTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Text="Slot:" />
                <ListBox Grid.Row="0" Grid.Column="1" ItemsSource="{local:EnumBindingSource EnumType={x:Type modelEnums:ArmorSlot}}"
                         ScrollViewer.VerticalScrollBarVisibility="Auto" Height="100">
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type modelEnums:ArmorSlot}">
                            <local:CheckBoxForEnumWithFlagAttribute Content="{Binding}" EnumFlag="{Binding}"
                                    EnumValue="{Binding Path=DataContext.Slot, RelativeSource={RelativeSource AncestorType=ListBox}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <TextBlock Grid.Row="1" Grid.Column="0" Text="Palette:" />
                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Palette}" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="CharacterSkillGETemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Text="Skill:" />
                <ComboBox Grid.Row="0" Grid.Column="1" ItemsSource="{local:EnumBindingSource EnumType={x:Type modelEnums:SkillType}}" SelectedItem="{Binding Key}" />

                <TextBlock Grid.Row="1" Grid.Column="0" Text="Skill Value:" />
                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="SlotSimilarColorTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Text="Color:" />
                <xctk:ColorPicker Grid.Row="0" Grid.Column="1" SelectedColor="{Binding Color}" DisplayColorAndName="True" />

                <TextBlock Grid.Row="1" Grid.Column="0" Text="Maximum Hue Diff:" />
                <xctk:DoubleUpDown Grid.Row="1" Grid.Column="1" Value="{Binding HDiff}" Minimum="0" Maximum="255" Increment="1" />

                <TextBlock Grid.Row="2" Grid.Column="0" Text="Maximum S/V Diff:" />
                <xctk:DecimalUpDown Grid.Row="2" Grid.Column="1" Value="{Binding SVDiff}" Minimum="0" Maximum="1" Increment="0.01" />

                <TextBlock Grid.Row="3" Grid.Column="0" Text="Slot:" />
                <ListBox Grid.Row="3" Grid.Column="1" ItemsSource="{local:EnumBindingSource EnumType={x:Type modelEnums:ArmorSlot}}"
                         ScrollViewer.VerticalScrollBarVisibility="Auto" Height="100">
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type modelEnums:ArmorSlot}">
                            <local:CheckBoxForEnumWithFlagAttribute Content="{Binding}" EnumFlag="{Binding}"
                                    EnumValue="{Binding Path=DataContext.Slot, RelativeSource={RelativeSource AncestorType=ListBox}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="SimilarColorArmorTypeTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Text="Color:" />
                <xctk:ColorPicker Grid.Row="0" Grid.Column="1" SelectedColor="{Binding Color}" DisplayColorAndName="True" />

                <TextBlock Grid.Row="1" Grid.Column="0" Text="Maximum Hue Diff:" />
                <xctk:DoubleUpDown Grid.Row="1" Grid.Column="1" Value="{Binding HDiff}" Minimum="0" Maximum="255" Increment="1" />

                <TextBlock Grid.Row="2" Grid.Column="0" Text="Maximum S/V Diff:" />
                <xctk:DecimalUpDown Grid.Row="2" Grid.Column="1" Value="{Binding SVDiff}" Minimum="0" Maximum="1" Increment="0.01" />

                <TextBlock Grid.Row="3" Grid.Column="0" Text="Armor Group:" />
                <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding ArmorGroup}" />
            </Grid>
        </DataTemplate>

        <local:LootCriteriaDataTemplateSelector x:Key="TemplateSelector"
                                                ColorLootCriteriaTemplate="{StaticResource ColorLootCriteriaTemplate}"
                                                DisabledRuleTemplate="{StaticResource DisabledRuleTemplate}"
                                                LongValueKeyTemplate="{StaticResource LongValueKeyTemplate}"
                                                DoubleValueKeyTemplate="{StaticResource DoubleValueKeyTemplate}"
                                                StringValueKeyTemplate="{StaticResource StringValueKeyTemplate}"
                                                ValueTemplate="{StaticResource ValueTemplate}"
                                                ObjectClassTemplate="{StaticResource ObjectClassTemplate}"
                                                SpellMatchTemplate="{StaticResource SpellMatchTemplate}"
                                                CharacterBaseSkillTemplate="{StaticResource CharacterBaseSkillTemplate}"
                                                CalcedBuffedTinkedTargetMeleeGETemplate="{StaticResource CalcedBuffedTinkedTargetMeleeGETemplate}"
                                                SlotExactPaletteTemplate="{StaticResource SlotExactPaletteTemplate}"
                                                CharacterSkillGETemplate="{StaticResource CharacterSkillGETemplate}"
                                                SlotSimilarColorTemplate="{StaticResource SlotSimilarColorTemplate}"
                                                SimilarColorArmorTypeTemplate="{StaticResource SimilarColorArmorTypeTemplate}" />

        <cvt:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
    </UserControl.Resources>
    <GroupBox Header="Criteria" Visibility="{Binding Converter={StaticResource NullToVisibilityConverter}}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" Text="Type:" />
            <ComboBox ItemsSource="{local:EnumBindingSource EnumType={x:Type modelEnums:LootCriteriaType}}" SelectedItem="{Binding Type}" />

            <ContentControl Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Content="{Binding}" ContentTemplateSelector="{StaticResource TemplateSelector}" />
        </Grid>
    </GroupBox>
</UserControl>
