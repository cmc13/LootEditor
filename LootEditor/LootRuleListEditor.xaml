<UserControl x:Class="LootEditor.LootRuleListEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LootEditor"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
            xmlns:vm="clr-namespace:LootEditor.ViewModels"
            xmlns:dd="urn:gong-wpf-dragdrop"
            xmlns:cvt="clr-namespace:LootEditor.Converters"
             xmlns:modelEnums="clr-namespace:LootEditor.Models.Enums"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <cvt:BoolToEnableDisableStringConverter x:Key="BoolToEnableDisableStringConverter" />
        <cvt:NameToFontWeightConverter x:Key="NameToFontWeightConverter" />
        <cvt:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
        <cvt:HasNonDisabledTypeCriteriaConverter x:Key="HasNonDisabledTypeCriteriaConverter" />
        <cvt:EnumDescriptionConverter x:Key="EnumDescriptionConverter" />
        <cvt:FullPathToFileNameConverter x:Key="FullPathToFileNameConverter" />
        <cvt:NameToFontSizeConverter x:Key="NameToFontSizeConverter" />

        <CollectionViewSource x:Key="LootRules" Source="{Binding LootRules}" Filter="CollectionViewSource_Filter"></CollectionViewSource>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0" Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <xctk:WatermarkTextBox Grid.Row="0" Margin="0,5" Name="txtFilter" TextChanged="TxtFilter_TextChanged" Text="{Binding Filter, UpdateSourceTrigger=PropertyChanged}">
                <xctk:WatermarkTextBox.Watermark>
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconFontAwesome Kind="FilterSolid" />
                        <TextBlock>Filter</TextBlock>
                    </StackPanel>
                </xctk:WatermarkTextBox.Watermark>
            </xctk:WatermarkTextBox>

            <Border Grid.Row="1" BorderThickness="1" BorderBrush="DarkGray">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <ListBox Grid.Row="0" ItemsSource="{Binding Source={StaticResource LootRules}}" BorderThickness="0"
                             SelectedItem="{Binding SelectedRule}"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled" HorizontalContentAlignment="Stretch"
                         dd:DragDrop.DropHandler="{Binding}" dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True">
                        <b:Interaction.Behaviors>
                            <local:ScrollIntoViewBehavior />
                        </b:Interaction.Behaviors>
                        <ListBox.InputBindings>
                            <KeyBinding Key="Up" Modifiers="Shift" Command="{Binding MoveSelectedItemUpCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=SelectedIndex}" />
                            <KeyBinding Key="Down" Modifiers="Shift" Command="{Binding MoveSelectedItemDownCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=SelectedIndex}" />
                            <KeyBinding Key="Delete" Command="{Binding DeleteRuleCommand}" />
                        </ListBox.InputBindings>
                        <ListBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Cut Rule" InputGestureText="Ctrl+X" Command="{Binding CutRuleCommand}">
                                    <MenuItem.Icon>
                                        <iconPacks:PackIconFontAwesome Kind="ScissorsSolid" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Copy Rule" InputGestureText="Ctrl+C" Command="{Binding CopyRuleCommand}">
                                    <MenuItem.Icon>
                                        <iconPacks:PackIconFontAwesome Kind="CopyRegular" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Paste Rule" InputGestureText="Ctrl+V" Command="{Binding PasteRuleCommand}">
                                    <MenuItem.Icon>
                                        <iconPacks:PackIconFontAwesome Kind="PasteRegular" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator />
                                <MenuItem Header="{Binding SelectedRule.IsDisabled, Converter={StaticResource BoolToEnableDisableStringConverter}}" Command="{Binding ToggleDisabledCommand}">
                                    <MenuItem.Icon>
                                        <iconPacks:PackIconFontAwesome Kind="LockSolid" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator />
                                <MenuItem Header="Add Rule" Command="{Binding AddRuleCommand}">
                                    <MenuItem.Icon>
                                        <iconPacks:PackIconFontAwesome Kind="PlusSolid" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Add Rule from Template" ItemsSource="{Binding RuleTemplates}">
                                    <MenuItem.Icon>
                                        <iconPacks:PackIconFontAwesome Kind="FileImportSolid" />
                                    </MenuItem.Icon>
                                    <MenuItem.ItemContainerStyle>
                                        <Style TargetType="MenuItem">
                                            <Setter Property="Header" Value="{Binding Header}" />
                                            <Setter Property="Command" Value="{Binding Command}" />
                                        </Style>
                                    </MenuItem.ItemContainerStyle>
                                </MenuItem>
                                <MenuItem Header="Save Rule as Template" Command="{Binding SaveRuleAsTemplateCommand}">
                                    <MenuItem.Icon>
                                        <iconPacks:PackIconFontAwesome Kind="FileExportSolid" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Clone Rule" Command="{Binding CloneRuleCommand}">
                                    <MenuItem.Icon>
                                        <iconPacks:PackIconFontAwesome Kind="CloneRegular" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Delete Rule" Command="{Binding DeleteRuleCommand}" InputGestureText="Del">
                                    <MenuItem.Icon>
                                        <iconPacks:PackIconFontAwesome Kind="SquareMinusSolid" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </ListBox.ContextMenu>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                <EventSetter Event="MouseDoubleClick" Handler="ListBoxItem_MouseDoubleClick" />
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type vm:LootRuleViewModel}">
                                <Grid ToolTip="{Binding Name}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Row="0" Text="{Binding Name}" TextTrimming="CharacterEllipsis" FontWeight="{Binding Name, Converter={StaticResource NameToFontWeightConverter}}" FontSize="{Binding Name, Converter={StaticResource NameToFontSizeConverter}, ConverterParameter=14}">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsDisabled}" Value="True">
                                                        <Setter Property="TextDecorations" Value="Strikethrough" />
                                                        <Setter Property="FontStyle" Value="Italic" />
                                                        <Setter Property="Opacity" Value="0.5" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>

                                    <Grid Grid.Row="1" Opacity="0.5" Visibility="{Binding Criteria, Converter={StaticResource HasNonDisabledTypeCriteriaConverter}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Orientation="Horizontal" Grid.Column="0">
                                            <TextBlock Text="{Binding Action, Converter={StaticResource EnumDescriptionConverter}}" FontSize="8" />
                                            <TextBlock Visibility="{Binding Action, Converter={StaticResource EqualityConverter}, ConverterParameter={x:Static modelEnums:LootAction.KeepUpTo}}" Text="{Binding KeepUpToCount}" FontSize="8" />
                                        </StackPanel>
                                        <TextBlock Grid.Column="2" Text="{Binding Criteria.Count, StringFormat=({0})}" FontSize="8" />
                                    </Grid>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0" Command="{Binding AddRuleCommand}" Padding="5" FontSize="14" BorderThickness="1" ToolTip="Add" BorderBrush="Black">
                            <Button.Content>
                                <StackPanel Orientation="Horizontal">
                                    <iconPacks:PackIconFontAwesome Kind="CirclePlusSolid" Margin="0,0,3,0" />
                                    <TextBlock Text="Add" TextTrimming="CharacterEllipsis" />
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        <Button Grid.Column="1" Command="{Binding CloneRuleCommand}" Padding="5" FontSize="14" BorderThickness="1" ToolTip="Clone">
                            <Button.Content>
                                <StackPanel Orientation="Horizontal">
                                    <iconPacks:PackIconFontAwesome Kind="CloneRegular" Margin="0,0,3,0" />
                                    <TextBlock Text="Clone" TextTrimming="CharacterEllipsis" />
                                </StackPanel>
                            </Button.Content>
                        </Button>
                        <Button Grid.Column="2" Command="{Binding DeleteRuleCommand}" Padding="5" FontSize="14" BorderThickness="1" ToolTip="Delete">
                            <Button.Content>
                                <StackPanel Orientation="Horizontal">
                                    <iconPacks:PackIconFontAwesome Kind="TrashCanRegular" Margin="0,0,3,0" />
                                    <TextBlock Text="Delete" TextTrimming="CharacterEllipsis" />
                                </StackPanel>
                            </Button.Content>
                        </Button>
                    </Grid>
                </Grid>
            </Border>
        </Grid>

        <GridSplitter Width="3" Grid.Column="0" />

        <local:LootRuleEditor Grid.Column="1" DataContext="{Binding SelectedRule}"
                              Visibility="{Binding DataContext.SelectedRule, RelativeSource={RelativeSource AncestorType=Grid}, Converter={StaticResource NullToVisibilityConverter}}" />
    </Grid>
</UserControl>
